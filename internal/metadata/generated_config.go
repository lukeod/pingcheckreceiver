// Code generated by mdatagen. DO NOT EDIT.

package metadata

import (
	"go.opentelemetry.io/collector/confmap"
)

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms)
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for ping metrics.
type MetricsConfig struct {
	PingDuration        MetricConfig `mapstructure:"ping.duration"`
	PingDurationAvg     MetricConfig `mapstructure:"ping.duration.avg"`
	PingDurationMax     MetricConfig `mapstructure:"ping.duration.max"`
	PingDurationMin     MetricConfig `mapstructure:"ping.duration.min"`
	PingDurationStddev  MetricConfig `mapstructure:"ping.duration.stddev"`
	PingErrors          MetricConfig `mapstructure:"ping.errors"`
	PingPacketLoss      MetricConfig `mapstructure:"ping.packet_loss"`
	PingPacketsReceived MetricConfig `mapstructure:"ping.packets.received"`
	PingPacketsSent     MetricConfig `mapstructure:"ping.packets.sent"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		PingDuration: MetricConfig{
			Enabled: true,
		},
		PingDurationAvg: MetricConfig{
			Enabled: true,
		},
		PingDurationMax: MetricConfig{
			Enabled: true,
		},
		PingDurationMin: MetricConfig{
			Enabled: true,
		},
		PingDurationStddev: MetricConfig{
			Enabled: true,
		},
		PingErrors: MetricConfig{
			Enabled: false,
		},
		PingPacketLoss: MetricConfig{
			Enabled: true,
		},
		PingPacketsReceived: MetricConfig{
			Enabled: true,
		},
		PingPacketsSent: MetricConfig{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for ping metrics builder.
type MetricsBuilderConfig struct {
	Metrics MetricsConfig `mapstructure:"metrics"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics: DefaultMetricsConfig(),
	}
}
